name: Deploy KeyVault

on:
  workflow_call:
    inputs:
      Subscription_Id:
        required: true
        type: string
      SecretName:
        required: true
        type: string
      ResourceGroup:
        required: true
        type: string
    secrets:
      SecretValue:
        required: true
      TENANT_ID:
        required: true
      CLIENT_ID:
        required: true
    
    # outputs:
    #   LogAnalyticsWorkspaceId:
    #     description: Resource ID of the Wookiees Management Group
    #     value: ${{ jobs.deploy-central-logging.outputs.LogAnalyticsWorkspaceId }}

jobs:
  deploy-vault:
    runs-on: [self-hosted, linux]
    environment: wookiees
    name: Deploy KeyVault

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: azure/login@v1
        name: Azure OIDC login
        with:
          tenant-id: ${{ secrets.TENANT_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
          subscription-id: ${{ inputs.Subscription_Id }}
          enable-AzPSSession: true

      - uses: azure/arm-deploy@v1 
        name: Create or get the Resource Group for keyvault
        id: resourceGroupKeyvault
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ inputs.Subscription_Id }}
          template: custommodules/components/resourceGroup.bicep
          parameters: >
            custommodules/components/resourceGroup.parameters.all.json
            parResourceGroupName=${{ inputs.ResourceGroup }}

      - uses: azure/arm-deploy@v1 
        name: Create the Keyvault and secret
        id: vault
        with:
          scope: resourcegroup
          region: westeurope
          resourceGroupName: ${{ steps.resourceGroupKeyvault.outputs.outResourceGroupName }}
          template: custommodules/components/vault.bicep
          parameters: >
            parKeyVaultName=challenge-kv
            parSecretName=${{ inputs.SecretName }}
            parSecretValue=${{ secrets.SecretValue }}
            parSecretWriterUserPrincipalName=VaultSecretWriter
            parSecretReaderUserPrincipalName=VaultSecretReader